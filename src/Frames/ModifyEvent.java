/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Classes.Event;
import static Frames.EventUser.events;
import Main.Main;
import static Main.Main.event;
import Methods.UserMethods;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author yosin
 */
public class ModifyEvent extends javax.swing.JFrame {
    UserMethods met = UserMethods.getInstance();
    DefaultListModel<String> list= new DefaultListModel<>();
    /**
     * Creates new form ModifyEvent
     */
    public ModifyEvent() {
        initComponents();
        list();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        spinnerDia = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spinnerMes = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spinnerAno = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Mis Eventos");

        jScrollPane1.setViewportView(jList1);

        jButton5.setText("Regresar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Ciudad" }));

        jButton3.setText("Estado");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pendiente", "Realizado", "Cancelado" }));

        jButton4.setText("Fecha");

        spinnerDia.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabel3.setText("/");

        spinnerMes.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabel4.setText("/");

        spinnerAno.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(19), Integer.valueOf(19), null, Integer.valueOf(1)));

        jButton2.setText("Modificar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Id del Evento a Modificar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(spinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 29, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(spinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(spinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(spinnerAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1)
                        .addGap(50, 50, 50)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jButton5)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        EventUser event= new EventUser();
        this.dispose();
        event.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            int id= Integer.parseInt(jTextField3.getText());
            Event eve=searchEvent(id);
            Main.toUpdate();
            if(eve.getStateEvent().equals("Pendiente")){
                            modify();
                        }else{
                            JOptionPane.showMessageDialog(null,"El evento ya se realizo o cancelo");
                        }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"El evento ya paso");
        }
        

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JSpinner spinnerAno;
    private javax.swing.JSpinner spinnerDia;
    private javax.swing.JSpinner spinnerMes;
    // End of variables declaration//GEN-END:variables
    public void list(){
         int userLogin= Main.user.identification;
         Event nuevo=Main.event.inicioEvento;
         list.clear();
         if(nuevo == null)return;
         if(nuevo.nextEvent.getIDEvent()==Main.event.inicioEvento.getIDEvent()){
             if(nuevo.getSend()==userLogin){
                 list.addElement(nuevo.getNameEvent());
                    list.addElement(""+nuevo.getIDEvent());
                    list.addElement(""+nuevo.getDateEvet());
                    list.addElement(" ");
                    jList1.setModel(list);
             }
         }else{
             do{
                if(nuevo.getSend()==userLogin){
                    list.addElement(nuevo.getNameEvent());
                    list.addElement(""+nuevo.getIDEvent());
                    list.addElement(" ");
                    
                }
                nuevo=nuevo.nextEvent;
             }while(nuevo.getIDEvent()!=Main.event.inicioEvento.getIDEvent());
             jList1.setModel(list);
         }
         
         
     }
    
    public Event searchEvent(int id){
        int userLogin= Main.user.identification;
         Event nuevo=Main.event.inicioEvento;
         if(jTextField3.getText().isEmpty()){
             JOptionPane.showMessageDialog(null,"No ha selecciona el id del evento que desea modificar");
         }
         if(nuevo == null){
             return null;
         }
         if(nuevo.nextEvent.getIDEvent()==Main.event.inicioEvento.getIDEvent()){
             if(nuevo.getIDEvent()==Integer.parseInt(jTextField3.getText())){
                 if(nuevo.getSend()==userLogin){
                 return nuevo;
             }
             }
             
         }else{
             do{
                 if(nuevo.getIDEvent()==Integer.parseInt(jTextField3.getText())){
                    if(nuevo.getSend()==userLogin){
                    
                        return nuevo;
                    }
                }
                nuevo=nuevo.nextEvent;
             }while(nuevo.getIDEvent()!=Main.event.inicioEvento.getIDEvent());
             
         }
        return null;
        
    }
    
    
    
    public void modify(){
        
        String menu = "Modificar Evento\n"
                + "1-Modificar Nombre o Ciudad\n"
                + "2-Fecha\n"
                +"3-Estado del Evento\n"
                +"5-Modificar Todo";
        while (true) {
            try {
                int op = Integer.parseInt(JOptionPane.showInputDialog(menu));
                if (op == 1) {
                    String kind = (String) jComboBox1.getSelectedItem();
                    if(kind.equals("Nombre")){
                        if(jTextField2.getText().isEmpty()||jTextField3.getText().isEmpty()){
                            JOptionPane.showMessageDialog(null,"No coloco el nuevo nombre del evento");
                        }else{
                            int id= Integer.parseInt(jTextField3.getText());
                            Event eve=searchEvent(id);
                            
                            String name=jTextField2.getText();
                            if(eve!=null){
                                eve.setNameEvent(name);
                                met.MeterArchivo();
                                Main.event.MeterArchivo();
                                JOptionPane.showMessageDialog(null,"Se modifico");
                                list();
                            }else{
                                JOptionPane.showMessageDialog(null,"Verifique se exista el evento");

                            }
                            
                        }
                        
                    }else if(kind.equals("Ciudad")){
                        if(jTextField2.getText().isEmpty()||jTextField3.getText().isEmpty()){
                            JOptionPane.showMessageDialog(null,"No coloco el nuevo de la ciudad del evento");
                            break;
                        }else{
                            int id= Integer.parseInt(jTextField3.getText());
                            Event eve=searchEvent(id);
                            String city=jTextField2.getText();
                            if(eve!=null){
                                eve.setCity(city);
                                met.MeterArchivo();
                                Main.event.MeterArchivo();
                                JOptionPane.showMessageDialog(null,"Se modifico");
                                list();
                            }else{
                                JOptionPane.showMessageDialog(null,"Verifique se exista el evento");

                            }
                        }
                        
                    }
                    break;
                }else if (op == 2) {
                    
                    if(jTextField3.getText().isEmpty()){
                            JOptionPane.showMessageDialog(null,"No coloco el nuevo de la ciudad del evento");
                            break;
                    }
                    Main.toUpdate();
                    String fechaDia=String.valueOf(spinnerDia.getValue());
                    String fechaMes=String.valueOf(spinnerMes.getValue());
                    String fechaAno=String.valueOf(spinnerAno.getValue());
                    String fecha=(fechaDia+"/"+fechaMes+"/"+fechaAno);
                    
                    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yy");
                    Date fechaDate = null;

                    try {
                        fechaDate = formato.parse(fecha);
                    } 
                    catch (Exception ex) 
                    {
                        System.out.println(ex);
                    }
                    int id= Integer.parseInt(jTextField3.getText());
                    Event eve=searchEvent(id);
                    if(eve!=null){
                        if(eve.getStateEvent().equals("Pendiente")){
                            eve.setDateEvet(fechaDate );
                            met.MeterArchivo();
                            Main.event.MeterArchivo();
                            JOptionPane.showMessageDialog(null,"Se modifico");
                            
                            list();
                        }else{
                            JOptionPane.showMessageDialog(null,"El evento ya se realizo o cancelo");
                        }
                        
                    }else{
                        JOptionPane.showMessageDialog(null,"Verifique se exista el evento");
                    }
                    
                    break;
                }else if (op == 3) {
                    if(jTextField3.getText().isEmpty()){
                        JOptionPane.showMessageDialog(null,"No coloco el nuevo de la ciudad del evento");
                            break;
                    }
                    String state=(String)jComboBox1.getSelectedItem();
                    int id= Integer.parseInt(jTextField3.getText());
                    Event eve=searchEvent(id);
                            
                            if(eve!=null){
                                eve.setStateEvent(state);
                                met.MeterArchivo();
                                Main.event.MeterArchivo();
                                JOptionPane.showMessageDialog(null,"Se modifico");
                                list();
                            }else{
                                JOptionPane.showMessageDialog(null,"Verifique se exista el evento");
                            }
                        break;
                }else if (op == 4) {
                    break;
                }
                
            }catch(Exception op){
            }   
        }     
    }
}
